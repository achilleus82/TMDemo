---
- name: Install MongoDB community edition with 2 Replicator and 1 Arbiter
  hosts: mongodb
  vars:
    repl_name: "rs0"
    members:
      - host: "mongodb1"
        port: "27017"
        priority: 1
        votes: 1
        arbiter: false
      - host: "mongodb2"
        port: "27017"
        priority: 0
        votes: 1
        arbiter: false
      - host: "mongodb3"
        port: "27017"
        priority: 0
        votes: 1
        arbiter: true
  tasks:
    - name: Modify host file to resolve MongoDB hostnames
      lineinfile:
        dest: /etc/hosts
        line: "{{ item.ip }} {{ item.hostname }}"
        state: present
      loop:
        - { hostname: "mongodb1", ip: "10.0.0.169" }
        - { hostname: "mongodb2", ip: "10.0.0.72" }
        - { hostname: "mongodb3", ip: "10.0.0.18" }
      become: true

    - name: Import MongoDB package repository key
      apt_key:
        url: https://www.mongodb.org/static/pgp/server-6.0.asc
        state: present
      become: true
   
    - name: Add MongoDB package repository
      apt_repository:
        repo: 'deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse'
        state: present
        update_cache: yes
      become: true

    #This is needed for Ubuntu 20.04 as libssl1.1 is not included but it is needed for mongoDB6.0.
    - name: Add Security package repository
      apt_repository:
        repo: 'deb [ arch=amd64 ] http://security.ubuntu.com/ubuntu focal-security main'
        state: present
        update_cache: yes
      become: true
   
    - name: Install libssl1.1 dependency
      apt:
        name: libssl1.1
        state: present
      become: true

    - name: Install MongoDB community edition
      package:
        name: mongodb-org
        state: present
      become: true
  
    - name: Start MongoDB service with replication enabled
      shell: systemctl start mongod
      become: true

    - name: Wait for MongoDB to start
      pause:
        seconds: 20
  
    - name: Add replication configuration to mongod.conf
      lineinfile:
        path: /etc/mongod.conf
        regexp: '^replication:'
        line: 'replication: { replSetName: "{{ repl_name }}" }'
        state: present
      become: true

    - name: Configure MongoDB Community Edition Replicaset, bind hostname to IP
      command: mongod --replSet {{ repl_name }} --bind_ip {{ item.host }} --port {{item.port }}
      with_items: "{{ members }}"
      loop_control:
        loop_var: item
      become: true

    - name: Configure Replicaset
      shell: |
        mongo --eval "rs.initiate({
          _id: '{{ repl_name }}',
          members: [
            { _id: 0, host: '{{ members[0].host }}:27017', priority: {{ members[0].priority }}, votes: {{ members[0].votes }} },
            { _id: 1, host: '{{ members[1].host }}:27017', priority: {{ members[1].priority }}, votes: {{ members[1].votes }} }
          ]
        })"
      become: true

    - name: Wait for replica set initialization
      pause:
        seconds: 30

    - name: Add arbiter to replica set
      command: mongo --eval 'rs.addArb("{{ item.host }}:{{ item.port }}");'
      when: item.arbiter
      with_items: "{{ members }}"
      loop_control:
        loop_var: item
      become: true

